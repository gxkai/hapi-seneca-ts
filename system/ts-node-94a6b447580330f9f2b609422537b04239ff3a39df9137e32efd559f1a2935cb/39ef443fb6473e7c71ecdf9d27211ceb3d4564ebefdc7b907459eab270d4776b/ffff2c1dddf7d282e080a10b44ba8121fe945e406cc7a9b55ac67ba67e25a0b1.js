"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Seneca = require("seneca");
var ping_logic_1 = require("./logic/ping.logic");
var HOST = process.env.HOST;
var BASES = process.env.BASES;
// const BROADCAST = process.env.BROADCAST
var REGISTRY = process.env.REGISTRY;
var ping = new ping_logic_1.PingLogic;
Seneca({
    logger: require('seneca-demo-logger'),
    debug: { short_logs: true }
})
    .use(ping.getPing)
    .use('consul-registry', {
    host: "" + REGISTRY,
    port: "8500"
})
    .use('mesh', {
    auto: true,
    host: HOST,
    pin: 'role:ping,cmd:date',
    bases: [BASES + ":39999"],
    discover: {
        // multicast: {
        //   address: BROADCAST
        // },
        // registry: {
        //   host: '127.0.0.1',
        //   port: "39999"
        // }
        registry: {
            active: true
        }
    },
    dumpnet: false,
})
    .ready(function () {
    console.log("Ping service ready!!! IP: " + HOST);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvbWFzdGVyL0RvY3VtZW50cy9IYXBpL2hhcGktc2VuZWNhLXRzL3Bpbmctc2VydmljZS9zZXJ2aWNlLnRzIiwic291cmNlcyI6WyIvaG9tZS9tYXN0ZXIvRG9jdW1lbnRzL0hhcGkvaGFwaS1zZW5lY2EtdHMvcGluZy1zZXJ2aWNlL3NlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBaUM7QUFDakMsaURBQStDO0FBRS9DLElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDO0FBQzlCLElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDO0FBQ2hDLDBDQUEwQztBQUMxQyxJQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQTtBQUVyQyxJQUFNLElBQUksR0FBRyxJQUFJLHNCQUFTLENBQUE7QUFHMUIsTUFBTSxDQUFDO0lBQ0wsTUFBTSxFQUFFLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztJQUNyQyxLQUFLLEVBQUUsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFO0NBQzVCLENBQ0E7S0FFRSxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztLQUNqQixHQUFHLENBQUMsaUJBQWlCLEVBQUU7SUFDdEIsSUFBSSxFQUFFLEtBQUcsUUFBVTtJQUNuQixJQUFJLEVBQUUsTUFBTTtDQUNiLENBQUM7S0FDRCxHQUFHLENBQUMsTUFBTSxFQUFFO0lBQ1gsSUFBSSxFQUFFLElBQUk7SUFDVixJQUFJLEVBQUUsSUFBSTtJQUNWLEdBQUcsRUFBRSxvQkFBb0I7SUFDekIsS0FBSyxFQUFFLENBQUksS0FBSyxXQUFRLENBQUM7SUFDekIsUUFBUSxFQUFFO1FBQ1IsZUFBZTtRQUNmLHVCQUF1QjtRQUN2QixLQUFLO1FBQ0wsY0FBYztRQUNkLHVCQUF1QjtRQUN2QixrQkFBa0I7UUFDbEIsSUFBSTtRQUNKLFFBQVEsRUFBRTtZQUNSLE1BQU0sRUFBRSxJQUFJO1NBQ2I7S0FDRjtJQUNELE9BQU8sRUFBRSxLQUFLO0NBT2YsQ0FBQztLQUNELEtBQUssQ0FBQztJQUNMLE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQTZCLElBQU0sQ0FBQyxDQUFBO0FBQ2xELENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgU2VuZWNhIGZyb20gJ3NlbmVjYSc7XG5pbXBvcnQgeyBQaW5nTG9naWMgfSBmcm9tICcuL2xvZ2ljL3BpbmcubG9naWMnO1xuXG5jb25zdCBIT1NUID0gcHJvY2Vzcy5lbnYuSE9TVDtcbmNvbnN0IEJBU0VTID0gcHJvY2Vzcy5lbnYuQkFTRVM7XG4vLyBjb25zdCBCUk9BRENBU1QgPSBwcm9jZXNzLmVudi5CUk9BRENBU1RcbmNvbnN0IFJFR0lTVFJZID0gcHJvY2Vzcy5lbnYuUkVHSVNUUllcblxuY29uc3QgcGluZyA9IG5ldyBQaW5nTG9naWNcblxuXG5TZW5lY2Eoe1xuICBsb2dnZXI6IHJlcXVpcmUoJ3NlbmVjYS1kZW1vLWxvZ2dlcicpLFxuICBkZWJ1ZzogeyBzaG9ydF9sb2dzOiB0cnVlIH1cbn1cbilcbiAgLy8gLnRlc3QoJ3ByaW50JyljZCBcbiAgLnVzZShwaW5nLmdldFBpbmcpXG4gIC51c2UoJ2NvbnN1bC1yZWdpc3RyeScsIHtcbiAgICBob3N0OiBgJHtSRUdJU1RSWX1gLFxuICAgIHBvcnQ6IFwiODUwMFwiXG4gIH0pXG4gIC51c2UoJ21lc2gnLCB7XG4gICAgYXV0bzogdHJ1ZSxcbiAgICBob3N0OiBIT1NULFxuICAgIHBpbjogJ3JvbGU6cGluZyxjbWQ6ZGF0ZScsXG4gICAgYmFzZXM6IFtgJHtCQVNFU306Mzk5OTlgXSxcbiAgICBkaXNjb3Zlcjoge1xuICAgICAgLy8gbXVsdGljYXN0OiB7XG4gICAgICAvLyAgIGFkZHJlc3M6IEJST0FEQ0FTVFxuICAgICAgLy8gfSxcbiAgICAgIC8vIHJlZ2lzdHJ5OiB7XG4gICAgICAvLyAgIGhvc3Q6ICcxMjcuMC4wLjEnLFxuICAgICAgLy8gICBwb3J0OiBcIjM5OTk5XCJcbiAgICAgIC8vIH1cbiAgICAgIHJlZ2lzdHJ5OiB7XG4gICAgICAgIGFjdGl2ZTogdHJ1ZVxuICAgICAgfVxuICAgIH0sXG4gICAgZHVtcG5ldDogZmFsc2UsXG4gICAgLy8gbGlzdGVuOiBbXG4gICAgLy8gICB7XG4gICAgLy8gICAgIHBpbjogJ3JvbGU6cGluZyxjbWQ6ZGF0ZScsXG4gICAgLy8gICAgIGhvc3Q6IEhPU1RcbiAgICAvLyAgIH1cbiAgICAvLyBdXG4gIH0pXG4gIC5yZWFkeSgoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYFBpbmcgc2VydmljZSByZWFkeSEhISBJUDogJHtIT1NUfWApXG4gIH0pXG4iXX0=